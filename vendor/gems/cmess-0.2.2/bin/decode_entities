#! /usr/bin/ruby

#--
###############################################################################
#                                                                             #
# decode_entities -- Decode HTML entities                                     #
#   [A component of cmess, the encoding tool-box]                             #
#                                                                             #
# Copyright (C) 2007 University of Cologne,                                   #
#                    Albertus-Magnus-Platz,                                   #
#                    50932 Cologne, Germany                                   #
#                                                                             #
# Authors:                                                                    #
#     Jens Wille <jens.wille@uni-koeln.de>                                    #
#                                                                             #
# cmess is free software; you can redistribute it and/or modify it under the  #
# terms of the GNU General Public License as published by the Free Software   #
# Foundation; either version 3 of the License, or (at your option) any later  #
# version.                                                                    #
#                                                                             #
# cmess is distributed in the hope that it will be useful, but WITHOUT ANY    #
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS   #
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more       #
# details.                                                                    #
#                                                                             #
# You should have received a copy of the GNU General Public License along     #
# with cmess. If not, see <http://www.gnu.org/licenses/>.                     #
#                                                                             #
###############################################################################
#++

require 'optparse'

$: << File.join(File.dirname(__FILE__), '..', 'lib')

require 'cmess/decode_entities'
require 'cmess/cli'

include CMess::CLI

PROGNAME = File.basename($0)

options = {
  :input           => STDIN,
  :output          => STDOUT,
  :source_encoding => CMess::DecodeEntities::INTERMEDIATE_ENCODING,
  :target_encoding => nil
}

OptionParser.new { |opts|
  opts.banner = "Usage: #{$0} [options] [FILE...]"

  opts.separator ''
  opts.separator 'Options:'

  opts.on('-i', '--input FILE', "Input file to read from [Default: STDIN]") { |f|
    options[:input] = open_file_or_std(f)
    options[:input_set] = true
  }

  opts.on('-o', '--output FILE', "Output file to write to [Default: STDOUT]") { |f|
    options[:output] = open_file_or_std(f, 'w')
  }

  opts.on('-I', '--in-place FILE', "Modify file in-place; sets '-i' and '-o'") { |f|
    options[:input], options[:output] = open_file_in_place(f)
    options[:input_set] = true
  }

  opts.separator ''

  opts.on('-e', '--source-encoding ENCODING', "Encoding of input file [Default: #{options[:source_encoding].upcase}]") { |e|
    options[:source_encoding] = e.downcase
  }

  opts.on('-t', '--target-encoding ENCODING', "Desired encoding for output file [Default: <source_encoding>]") { |e|
    options[:target_encoding] = e.downcase
  }

  opts.separator ''
  opts.separator 'Generic options:'

  opts.on('-h', '--help', "Print this help message and exit") {
    puts opts
    exit
  }

  opts.on('--version', "Print program version and exit") {
    puts "#{PROGNAME} v#{CMess::DecodeEntities::VERSION} (part of cmess v#{CMess::VERSION})"
    exit
  }

  opts.separator ''
  opts.separator "When FILE is -, either STDIN or STDOUT is used (as appropriate)."
}.parse!

cli do
  trailing_args_as_input(options)

  CMess::DecodeEntities.decode(
    options[:input],
    options[:output],
    options[:source_encoding],
    options[:target_encoding]
  )
end
